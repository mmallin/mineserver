#
# Mineserver configuration
#

# Include item alias config file
include "item_alias.cfg";

# Server name
system.server_name = "Mineserver alpha testserver";

# Validate usernames against minecraft.net?
system.user_validation = false;

# Userlimit
system.user_limit = 50;

# IP
net.ip = "0.0.0.0";

# Port
net.port = 25565;

# Write the PID of the server to this file
system.pid_file = "mineserver.pid";

# Map directory
map.storage.nbt.directory = "world";

# Localisation strings
strings.wrong_protocol = "Wrong protocol version";
strings.server_full = "Server is currently full";

# Physics options
system.physics.enabled = true;

# Save every generated chunk
map.generate_spawn.enabled = true;
map.generate_spawn.size = 5;
map.generate_spawn.show_progress = true;

# Generate flatgrass map
mapgen.flatgrass = true;

# Sea level
mapgen.sea.level = 62;

# Trees
mapgen.trees.enabled = true;

# Cave configuration
mapgen.caves.enabled = true;
mapgen.caves.lava = true;
mapgen.caves.ore = true;

# Beaches
mapgen.beaches.expand = true;
mapgen.beaches.extent = 10;
mapgen.beaches.height = 2;

# Are chest locked when they are placed (only placer and mods/admins can access)
temp.chests_locked_by_default = true;

# Plugin loading
#
# The syntax is as follows:
# > system.plugins += ("<name>":"[location]");
# Alternatively you can do this:
# > system.plugins.name = "[location]"
# If you use the second syntax, you're limited to [a-zA-Z0-9_]+ for the name.
# It's probably not a great idea to use any characters other than that anyway.
#
# <plugin name>
# The plugin name is whatever you like, it will be passed to the plugin so it
# can use it as a sort of instance name. For example if you have two different
# ban lists (for some reason), you could have them both operating at once by
# giving them unique identifiers.
#
# [location]
# The location is optional. If it's a zero-length string, mineserver tries to
# load it from within the main binary. Instructions on how to compile plugins
# into mineserver are pending, but it basically involves just compiling the
# plugin to an object file then linking it to the mineserver binary when it's
# built. If you omit the .dll/.so part of the filename, mineserver will try to
# add it automatically.
#
# More information on this topic will be covered on the wiki Soon (tm).

system.plugins = ();
system.plugins += ("derp":"./derp");
#system.plugins += ("banlist":"./banlist");
#system.plugins += ("whitelist":"./whitelist");
